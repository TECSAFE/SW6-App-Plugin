name: Test Pipeline

on:
  push:
    branches:
      - main

jobs:

  phpunit:
    name: Phpunit tests | Shopware ${{ matrix.shopware }}, PHP ${{ matrix.php }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - shopware: '6.5.0.0'
            php: '8.1'
          - shopware: '6.5.6.0'
            php: '8.1'
    steps:

      - name: Clone Code
        uses: actions/checkout@v3

      - name: Download Docker
        run: |
          docker pull dockware/dev:${{ matrix.shopware }}

      - name: Start Docker
        run: |
          docker run --rm -p 80:80 -p 443:443 -p 3306:3306 --name shopware-${{ matrix.shopware }}-${{ matrix.php }} --env PHP_VERSION=${{ matrix.php }} --env XDEBUG=0 -d dockware/dev:${{ matrix.shopware }}
          sleep 30
          
          # now change the domain of our shop if required
          sudo echo "127.0.0.1 local.shopware.shop" | sudo tee -a /etc/hosts

      - name: Install additional dependencies
        run: |
          docker exec shopware-${{ matrix.shopware }}-${{ matrix.php }} bash -c 'cd /var/www/html/ && composer require -vvv --dev --no-scripts dev-tools code-quality'

      - name: Upload into Docker
        run: |
          docker cp $(pwd)/. shopware-${{ matrix.shopware }}-${{ matrix.php }}:/var/www/html/custom/plugins/MadTecsafe
          docker exec shopware-${{ matrix.shopware }}-${{ matrix.php }} bash -c 'sudo chown www-data:www-data /var/www/html/custom/plugins -R'

      #- name: Install and Build Artifacts
      #  run: |
      #    docker exec shopware-${{ matrix.shopware }}-${{ matrix.php }} bash -c 'cd /var/www/html/custom/plugins/MadTecsafe && shopware-cli extension build .'

      - name: Install/Configure Plugin
        run: |
          docker exec shopware-${{ matrix.shopware }}-${{ matrix.php }} bash -c 'pwd && ls -lah /var/www && cd /var/www/html && php bin/console plugin:refresh'
          docker exec shopware-${{ matrix.shopware }}-${{ matrix.php }} bash -c 'cd /var/www/html && php bin/console plugin:install MadTecsafe --activate'
          docker exec shopware-${{ matrix.shopware }}-${{ matrix.php }} bash -c 'cd /var/www/html && php bin/console cache:clear'

      - name: Run phpunit
        run: |
          docker exec shopware-${{ matrix.shopware }}-${{ matrix.php }} bash -c 'cd /var/www/html && php vendor/bin/phpunit -c custom/plugins/MadTecsafe'
  #docker exec it $(docker ps --latest --quiet) bash -c 'php bin/console system:config:set MyPlugin.config.MyKey ${{ secrets.MYKEY_TEST }}'


#      - name: Install Cypress
#        run: cd tests/Cypress && make install -B
#
#      - name: Start Cypress
#        run: cd tests/Cypress && CYPRESS_BASE_URL=http://local.shopware.shop CYPRESS_SHOPWARE=${{ matrix.shopware }} ./node_modules/.bin/cypress run --headless
#
#      - name: Download Logs
#        if: ${{ always() }}
#        run: |
#          mkdir -p $(pwd)/Tests/Cypress/cypress/logs/shopware
#          mkdir -p $(pwd)/Tests/Cypress/cypress/logs/apache
#          docker cp shop:/var/www/html/var/log/. $(pwd)/Tests/Cypress/cypress/logs/shopware
#          docker cp shop:/var/log/php/. $(pwd)/Tests/Cypress/cypress/logs/apache
#
#      - name: Store Cypress Results
#        if: ${{ always() }}
#        uses: actions/upload-artifact@v2
#        with:
#          name: cypress_results_sw_v${{ matrix.shopware }}
#          retention-days: 1
#          path: |
#            Tests/Cypress/cypress/logs
#            Tests/Cypress/cypress/videos
#            Tests/Cypress/cypress/screenshots
