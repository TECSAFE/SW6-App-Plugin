name: Main

on:
  pull_request:
  push:

env:
  ACTIONS_STEP_DEBUG: true
  RUNNER_DEBUG: true

jobs:
  phpstan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: php-actions/composer@v6 # or alternative dependency management
        with:
          php_version: '8.2'
          php_extensions: curl dom fileinfo gd intl json mbstring openssl pdo pdo_mysql session simplexml sodium xml zip zlib
          args: "--no-plugins"
      - uses: php-actions/phpstan@v3
        with:
          path: src/
          configuration: ./phpstan.neon
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  phpunit:
    name: Phpunit tests | Shopware ${{ matrix.shopware }}, PHP ${{ matrix.php }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - shopware: '6.6.5.0'
            php: '8.2'
            froshCodeQuality: '0.4.0'
            shopwareDevTools: '1.5.0'
          - shopware: '6.6.5.0'
            php: '8.3'
            froshCodeQuality: '0.4.0'
            shopwareDevTools: '1.5.0'
    steps:

      - name: Clone Code
        uses: actions/checkout@v3

      - name: Composer install
        uses: php-actions/composer@v6 # or alternative dependency management
        with:
          php_version: ${{ matrix.php }}
          php_extensions: curl dom fileinfo gd intl json mbstring openssl pdo pdo_mysql session simplexml sodium xml zip zlib
          args: "--no-plugins"
          dev: 'no'

      - name: Download Docker
        run: |
          docker pull dockware/dev:${{ matrix.shopware }}

      - name: Start Docker
        run: |
          docker run --rm -p 80:80 -p 443:443 -p 3306:3306 --name shopware-${{ matrix.shopware }}-${{ matrix.php }} --env PHP_VERSION=${{ matrix.php }} --env XDEBUG=0 -d dockware/dev:${{ matrix.shopware }}
          sleep 30

          # now change the domain of our shop if required
          sudo echo "127.0.0.1 local.shopware.shop" | sudo tee -a /etc/hosts

      - name: Install additional dependencies
        run: |
          docker exec shopware-${{ matrix.shopware }}-${{ matrix.php }} bash -c 'cd /var/www/html/ && composer require -vvv --dev --no-scripts shopware/dev-tools:${{ matrix.shopwareDevTools }} frosh/code-quality-meta:${{ matrix.froshCodeQuality }}'

      - name: Upload into Docker
        run: |
          docker cp $(pwd)/. shopware-${{ matrix.shopware }}-${{ matrix.php }}:/var/www/html/custom/plugins/MadTecsafe
          docker exec shopware-${{ matrix.shopware }}-${{ matrix.php }} bash -c 'sudo chown www-data:www-data /var/www/html/custom/plugins -R'

      #- name: Install and Build Artifacts
      #  run: |
      #    docker exec shopware-${{ matrix.shopware }}-${{ matrix.php }} bash -c 'cd /var/www/html/custom/plugins/MadTecsafe && shopware-cli extension build .'

      - name: Install/Configure Plugin
        run: |
          docker exec shopware-${{ matrix.shopware }}-${{ matrix.php }} bash -c 'pwd && ls -lah /var/www && cd /var/www/html && php bin/console plugin:refresh'
          docker exec shopware-${{ matrix.shopware }}-${{ matrix.php }} bash -c 'cd /var/www/html && php bin/console plugin:install MadTecsafe --activate'
          docker exec shopware-${{ matrix.shopware }}-${{ matrix.php }} bash -c 'cd /var/www/html && php bin/console cache:clear'

      - name: Run phpunit
        run: |
          docker exec shopware-${{ matrix.shopware }}-${{ matrix.php }} bash -c 'cd /var/www/html && php vendor/bin/phpunit -c custom/plugins/MadTecsafe'
  #docker exec it $(docker ps --latest --quiet) bash -c 'php bin/console system:config:set MyPlugin.config.MyKey ${{ secrets.MYKEY_TEST }}'

  build-zip:
    needs: [phpstan, phpunit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: '${{ github.token }}'
      - uses: php-actions/composer@v6 # or alternative dependency management
        with:
          php_version: '8.2'
          args: "--no-plugins --ignore-platform-reqs"
          dev: 'no'

      - name: Install shopware-cli
        uses: FriendsOfShopware/shopware-cli-action@v1.0.4
        with:
          version: '0.5.12'
          token: '${{ github.token }}'
      - name: build plugin
        run: shopware-cli extension zip . --disable-git --release

      #      - name: Release
      #        uses: softprops/action-gh-release@v1
      #        with:
      #          files: |
      #            build/release/*
      #          prerelease: true

      - uses: actions/upload-artifact@v4
        with:
          name: MadTecsafe.zip
          path: ./MadTecsafe.zip
